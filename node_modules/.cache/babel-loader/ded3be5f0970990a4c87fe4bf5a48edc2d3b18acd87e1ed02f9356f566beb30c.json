{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prashant\\\\ReduxProject(PS)\\\\AI Generation Context API\\\\musey_ReactRedux\\\\src\\\\MuseyScreens\\\\Contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { Register, loginData, ForgotData } from \"../utils/api\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"UserId\"));\n  const [user, setUser] = useState(null);\n  const handleSignup = values => {\n    Register(values).then(data => {\n      if (data.detail !== \"Email already registered\") {\n        localStorage.setItem(\"user_role\", data.role);\n        setIsLoggedIn(true);\n        toast.success(\"Please check your email and verify to use musey AI services\");\n        setUser(data.user); // Assuming the API returns the user object\n      } else {\n        // console.log(\"API response:\", data.detail);\n        toast.error(data.detail);\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Error occurred during sign up\");\n    });\n  };\n  const handleLogin = values => {\n    loginData(values).then(data => {\n      //  console.log(\"login\", data);\n      if (data.access_token !== \"\") {\n        const params = data.access_token;\n        const BASE_URL = \"http://localhost:8000\";\n        const url = `${BASE_URL}/user/?token=${encodeURIComponent(params)}`;\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => response.json()).then(result => {\n          //  console.log(\"resultAccess_token\", result);\n          toast.success(\"Login successful!\");\n          setTimeout(() => {\n            window.location.href = \"/yourboard\";\n          }, 5000);\n          localStorage.setItem(\"UserId\", result.UserId);\n          localStorage.setItem(\"UserName\", result.userName);\n          localStorage.setItem(\"UserEmail\", result.userEmail);\n          localStorage.setItem(\"UserRole\", result.userRole);\n          localStorage.setItem(\"UserActive\", result.useractive);\n        }).catch(error => {\n          console.log(\"error\", error);\n        });\n      } else {\n        toast.error(data.detail);\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Incorrect email or password\");\n    });\n  };\n  const handlePassword = values => {\n    ForgotData(values).then(data => {\n      //console.log(\"forgot\", data);\n      toast.success(data);\n      if (data === \"password reset email sent\") {\n        window.location.href = \"/passwordchange\";\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Error occurred during password reset\");\n    });\n  };\n  const authContextValue = {\n    isLoggedIn,\n    setIsLoggedIn,\n    user,\n    signup: handleSignup,\n    loginItem: handleLogin,\n    forgot: handlePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"WB8IMg4Jiot9v0PeKdxDUheIXfs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","Register","loginData","ForgotData","toast","ToastContainer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isLoggedIn","setIsLoggedIn","localStorage","getItem","user","setUser","handleSignup","values","then","data","detail","setItem","role","success","error","catch","console","handleLogin","access_token","params","BASE_URL","url","encodeURIComponent","fetch","method","headers","response","json","result","setTimeout","window","location","href","UserId","userName","userEmail","userRole","useractive","log","handlePassword","authContextValue","signup","loginItem","forgot","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Prashant/ReduxProject(PS)/AI Generation Context API/musey_ReactRedux/src/MuseyScreens/Contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { Register, loginData, ForgotData } from \"../utils/api\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(\r\n    !!localStorage.getItem(\"UserId\")\r\n  );\r\n  const [user, setUser] = useState(null);\r\n\r\n  const handleSignup = (values) => {\r\n    \r\n    Register(values)\r\n      .then((data) => {\r\n        if (data.detail !== \"Email already registered\") {\r\n          localStorage.setItem(\"user_role\",data.role)\r\n          setIsLoggedIn(true);\r\n          toast.success(\"Please check your email and verify to use musey AI services\");\r\n          setUser(data.user); // Assuming the API returns the user object\r\n        } else {\r\n          // console.log(\"API response:\", data.detail);\r\n          toast.error(data.detail);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Error occurred during sign up\");\r\n      });\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    loginData(values)\r\n      .then((data) => {\r\n      //  console.log(\"login\", data);\r\n        if (data.access_token !== \"\") {\r\n          const params = data.access_token;\r\n          const BASE_URL = \"http://localhost:8000\";\r\n          const url = `${BASE_URL}/user/?token=${encodeURIComponent(params)}`;\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n            //  console.log(\"resultAccess_token\", result);\r\n              toast.success(\"Login successful!\");\r\n              setTimeout(() => {\r\n                 window.location.href = \"/yourboard\";\r\n              }, 5000);\r\n              localStorage.setItem(\"UserId\", result.UserId);\r\n              localStorage.setItem(\"UserName\", result.userName);\r\n              localStorage.setItem(\"UserEmail\", result.userEmail);\r\n              localStorage.setItem(\"UserRole\", result.userRole);\r\n              localStorage.setItem(\"UserActive\", result.useractive);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"error\", error);\r\n            });\r\n        } else {\r\n          toast.error(data.detail);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Incorrect email or password\");\r\n      });\r\n  };\r\n\r\n  const handlePassword = (values) => {\r\n    ForgotData(values)\r\n      .then((data) => {\r\n        //console.log(\"forgot\", data);\r\n        toast.success(data);\r\n        if(data === \"password reset email sent\"){\r\n          window.location.href = \"/passwordchange\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Error occurred during password reset\");\r\n      });\r\n  };\r\n\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    setIsLoggedIn,\r\n    user,\r\n    signup: handleSignup,\r\n    loginItem: handleLogin,\r\n    forgot: handlePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      <ToastContainer />\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}