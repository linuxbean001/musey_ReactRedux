{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prashant\\\\ReduxProject(PS)\\\\AI Generation Context API\\\\musey_ReactRedux\\\\src\\\\MuseyScreens\\\\Contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { Register, loginData, ForgotData } from \"../utils/api\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"UserId\"));\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const getAccessTokenFromURL = () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      if (urlParams.get(\"accesstoken\")) {\n        handleGoogle();\n      }\n    };\n    getAccessTokenFromURL();\n  }, []);\n  const handleGoogleLogin = async () => {\n    c;\n    try {\n      // Fetch user data from your backend using the access token\n      const BASE_URL = \"http://localhost:8000\";\n      const apiUrl = `${BASE_URL}/user/?token=${encodeURIComponent(accessToken)}`;\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      console.log(\"data\", data);\n      setUser(data);\n      setIsLoggedIn(true);\n\n      // Store user data in local storage or state as needed\n      localStorage.setItem(\"LoginToken\", accessToken);\n      localStorage.setItem(\"UserId\", data.UserId);\n      localStorage.setItem(\"UserName\", data.userName);\n      localStorage.setItem(\"UserEmail\", data.userEmail);\n      localStorage.setItem(\"UserRole\", data.userRole);\n      localStorage.setItem(\"UserActive\", data.useractive);\n      return true; // Login successful\n    } catch (error) {\n      console.error(\"Google login error:\", error);\n      return false; // Login failed\n    }\n  };\n\n  const handleSignup = values => {\n    Register(values).then(data => {\n      if (data.detail !== \"Email already registered\") {\n        localStorage.setItem(\"user_role\", data.role);\n        toast.success(\"Please check your email and verify to use musey AI services\");\n        setUser(data.user); // Assuming the API returns the user object\n      } else {\n        // console.log(\"API response:\", data.detail);\n        toast.error(data.detail);\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Error occurred during sign up\");\n    });\n  };\n  const handleLogin = values => {\n    loginData(values).then(data => {\n      //  console.log(\"login\", data);\n      if (data.access_token !== \"\") {\n        const params = data.access_token;\n        const BASE_URL = \"http://localhost:8000\";\n        const url = `${BASE_URL}/user/?token=${encodeURIComponent(params)}`;\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => response.json()).then(result => {\n          //  console.log(\"resultAccess_token\", result);\n          toast.success(\"Login successful!\");\n          setIsLoggedIn(true);\n          setTimeout(() => {\n            window.location.href = \"/yourboard\";\n          }, 5000);\n          localStorage.setItem(\"UserId\", result.UserId);\n          localStorage.setItem(\"UserName\", result.userName);\n          localStorage.setItem(\"UserEmail\", result.userEmail);\n          localStorage.setItem(\"UserRole\", result.userRole);\n          localStorage.setItem(\"UserActive\", result.useractive);\n        }).catch(error => {\n          console.log(\"error\", error);\n        });\n      } else {\n        toast.error(data.detail);\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Incorrect email or password\");\n    });\n  };\n  const handlePassword = values => {\n    ForgotData(values).then(data => {\n      //console.log(\"forgot\", data);\n      toast.success(data);\n      if (data === \"password reset email sent\") {\n        window.location.href = \"/passwordchange\";\n      }\n    }).catch(error => {\n      console.error(\"API error:\", error);\n      toast.error(\"Error occurred during password reset\");\n    });\n  };\n  const authContextValue = {\n    isLoggedIn,\n    user,\n    handleGoogleLogin,\n    signup: handleSignup,\n    loginItem: handleLogin,\n    forgot: handlePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5aCPOTi8c3Gbr28IVuYKUgcdjZk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","Register","loginData","ForgotData","toast","ToastContainer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isLoggedIn","setIsLoggedIn","localStorage","getItem","user","setUser","getAccessTokenFromURL","urlParams","URLSearchParams","window","location","search","get","handleGoogle","handleGoogleLogin","c","BASE_URL","apiUrl","encodeURIComponent","accessToken","response","fetch","data","json","console","log","setItem","UserId","userName","userEmail","userRole","useractive","error","handleSignup","values","then","detail","role","success","catch","handleLogin","access_token","params","url","method","headers","result","setTimeout","href","handlePassword","authContextValue","signup","loginItem","forgot","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Prashant/ReduxProject(PS)/AI Generation Context API/musey_ReactRedux/src/MuseyScreens/Contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { Register, loginData, ForgotData } from \"../utils/api\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(\r\n    !!localStorage.getItem(\"UserId\")\r\n  );\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getAccessTokenFromURL = () => {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      if (urlParams.get(\"accesstoken\")) {\r\n        handleGoogle();\r\n      }\r\n    };\r\n    getAccessTokenFromURL();\r\n  }, []);\r\n\r\n  const handleGoogleLogin = async () => {\r\n    c\r\n\r\n    try {\r\n      // Fetch user data from your backend using the access token\r\n      const BASE_URL = \"http://localhost:8000\";\r\n      const apiUrl = `${BASE_URL}/user/?token=${encodeURIComponent(\r\n        accessToken\r\n      )}`;\r\n      const response = await fetch(apiUrl);\r\n      const data = await response.json();\r\n      console.log(\"data\", data);\r\n\r\n      setUser(data);\r\n      setIsLoggedIn(true);\r\n\r\n      // Store user data in local storage or state as needed\r\n      localStorage.setItem(\"LoginToken\", accessToken);\r\n      localStorage.setItem(\"UserId\", data.UserId);\r\n      localStorage.setItem(\"UserName\", data.userName);\r\n      localStorage.setItem(\"UserEmail\", data.userEmail);\r\n      localStorage.setItem(\"UserRole\", data.userRole);\r\n      localStorage.setItem(\"UserActive\", data.useractive);\r\n\r\n      return true; // Login successful\r\n    } catch (error) {\r\n      console.error(\"Google login error:\", error);\r\n      return false; // Login failed\r\n    }\r\n  };\r\n\r\n  const handleSignup = (values) => {\r\n    Register(values)\r\n      .then((data) => {\r\n        if (data.detail !== \"Email already registered\") {\r\n          localStorage.setItem(\"user_role\", data.role);\r\n          toast.success(\r\n            \"Please check your email and verify to use musey AI services\"\r\n          );\r\n          setUser(data.user); // Assuming the API returns the user object\r\n        } else {\r\n          // console.log(\"API response:\", data.detail);\r\n          toast.error(data.detail);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Error occurred during sign up\");\r\n      });\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    loginData(values)\r\n      .then((data) => {\r\n        //  console.log(\"login\", data);\r\n        if (data.access_token !== \"\") {\r\n          const params = data.access_token;\r\n          const BASE_URL = \"http://localhost:8000\";\r\n          const url = `${BASE_URL}/user/?token=${encodeURIComponent(params)}`;\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n              //  console.log(\"resultAccess_token\", result);\r\n              toast.success(\"Login successful!\");\r\n              setIsLoggedIn(true);\r\n              setTimeout(() => {\r\n                window.location.href = \"/yourboard\";\r\n              }, 5000);\r\n              localStorage.setItem(\"UserId\", result.UserId);\r\n              localStorage.setItem(\"UserName\", result.userName);\r\n              localStorage.setItem(\"UserEmail\", result.userEmail);\r\n              localStorage.setItem(\"UserRole\", result.userRole);\r\n              localStorage.setItem(\"UserActive\", result.useractive);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"error\", error);\r\n            });\r\n        } else {\r\n          toast.error(data.detail);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Incorrect email or password\");\r\n      });\r\n  };\r\n\r\n  const handlePassword = (values) => {\r\n    ForgotData(values)\r\n      .then((data) => {\r\n        //console.log(\"forgot\", data);\r\n        toast.success(data);\r\n        if (data === \"password reset email sent\") {\r\n          window.location.href = \"/passwordchange\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API error:\", error);\r\n        toast.error(\"Error occurred during password reset\");\r\n      });\r\n  };\r\n\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    user,\r\n    handleGoogleLogin,\r\n    signup: handleSignup,\r\n    loginItem: handleLogin,\r\n    forgot: handlePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      <ToastContainer />\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}