{"ast":null,"code":"const BASE_URL = \"http://www.musey.ai/api\"; // Update with your API base URL\nconst BASE_URL1 = \"http://localhost:8000\";\nexport const Register = async userData => {\n  const response = await fetch(`${BASE_URL1}/signup/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message);\n  }\n  return response.json();\n};\n_c = Register;\nexport const loginData = async userData => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"accept\", \"application/json\");\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"grant_type\", \"\");\n  urlencoded.append(\"username\", userData.username);\n  urlencoded.append(\"password\", userData.password);\n  urlencoded.append(\"scope\", \"\");\n  urlencoded.append(\"client_id\", \"\");\n  urlencoded.append(\"client_secret\", \"\");\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${BASE_URL}/login/`, requestOptions);\n  if (!response.ok) {\n    const errorData = await response.text();\n    throw new Error(errorData.message);\n  }\n  return response.json();\n};\nexport const ForgotData = async userData => {\n  const params = userData.email;\n  const url = `${BASE_URL}/forgetpassword/?email=${encodeURIComponent(params)}`;\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message);\n  }\n  return response.json();\n};\n_c2 = ForgotData;\nvar _c, _c2;\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"ForgotData\");","map":{"version":3,"names":["BASE_URL","BASE_URL1","Register","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","_c","loginData","myHeaders","Headers","append","urlencoded","URLSearchParams","username","password","requestOptions","redirect","text","ForgotData","params","email","url","encodeURIComponent","_c2","$RefreshReg$"],"sources":["D:/Prashant/ReduxProject(PS)/AI Generation Context API/musey_ReactRedux/src/MuseyScreens/utils/api.js"],"sourcesContent":["const BASE_URL = \"http://www.musey.ai/api\"; // Update with your API base URL\r\nconst BASE_URL1 =  \"http://localhost:8000\";\r\n\r\nexport const Register = async (userData) => {\r\n  const response = await fetch(`${BASE_URL1}/signup/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const loginData = async (userData) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"accept\", \"application/json\");\r\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n  var urlencoded = new URLSearchParams();\r\n  urlencoded.append(\"grant_type\", \"\");\r\n  urlencoded.append(\"username\", userData.username);\r\n  urlencoded.append(\"password\", userData.password);\r\n  urlencoded.append(\"scope\", \"\");\r\n  urlencoded.append(\"client_id\", \"\");\r\n  urlencoded.append(\"client_secret\", \"\");\r\n\r\n  var requestOptions = {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: \"follow\",\r\n  };\r\n\r\n  const response = await fetch(`${BASE_URL}/login/`, requestOptions);\r\n  if (!response.ok) {\r\n    const errorData = await response.text();\r\n    throw new Error(errorData.message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const ForgotData = async (userData) => {\r\n  const params = userData.email;\r\n\r\n  const url = `${BASE_URL}/forgetpassword/?email=${encodeURIComponent(params)}`;\r\n\r\n  const response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}