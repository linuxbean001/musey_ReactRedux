{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prashant\\\\ReduxProject(PS)\\\\AI Generation Context API\\\\musey_ReactRedux\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"./MuseyScreens/Contexts/AuthContext\";\nimport Header from \"./Shared/Component/Header\";\nimport MainPage from \"./MuseyScreens/Component/LandingPages/MainPage\";\nimport FeedBackBoard from \"./MuseyScreens/Component/UserDashBoard/FeedBackBoard\";\nimport YourBoard from \"./MuseyScreens/Component/UserDashBoard/YourBoard\";\nimport UploadBoard from \"./MuseyScreens/Component/UserDashBoard/UploadBoard\";\nimport AddImageBoard from \"./MuseyScreens/Component/UserDashBoard/AddImageBoard\";\nimport Forgot from \"./Shared/Component/Forgot\";\nimport EmailVerify from \"./Shared/Component/EmailVerify\";\nimport ImageRequestBoard from \"./MuseyScreens/Component/UserDashBoard/ImageRequestBoard\";\nimport ChangePassword from \"./Shared/Component/ChangePassword\";\nimport LogOut from \"./Shared/Component/LogOut\";\n\n// ProtectedRoute component to handle protected routes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  let {\n    element,\n    redirectTo,\n    condition\n  } = _ref;\n  return condition ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 32\n  }, this);\n};\n_c = ProtectedRoute;\nfunction App() {\n  _s();\n  const authContext = useContext(AuthContext);\n  const isLoggedIn = authContext.isLoggedIn;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ImageRequestBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0q6N3HTsGa67OokMUhTOzE2a0M=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useContext","BrowserRouter","Routes","Route","Navigate","AuthContext","Header","MainPage","FeedBackBoard","YourBoard","UploadBoard","AddImageBoard","Forgot","EmailVerify","ImageRequestBoard","ChangePassword","LogOut","jsxDEV","_jsxDEV","ProtectedRoute","_ref","element","redirectTo","condition","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","authContext","isLoggedIn","className","children","_c2","$RefreshReg$"],"sources":["D:/Prashant/ReduxProject(PS)/AI Generation Context API/musey_ReactRedux/src/App.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./MuseyScreens/Contexts/AuthContext\"\r\nimport Header from \"./Shared/Component/Header\";\r\nimport MainPage from \"./MuseyScreens/Component/LandingPages/MainPage\";\r\nimport FeedBackBoard from \"./MuseyScreens/Component/UserDashBoard/FeedBackBoard\";\r\nimport YourBoard from \"./MuseyScreens/Component/UserDashBoard/YourBoard\";\r\nimport UploadBoard from \"./MuseyScreens/Component/UserDashBoard/UploadBoard\";\r\nimport AddImageBoard from \"./MuseyScreens/Component/UserDashBoard/AddImageBoard\";\r\nimport Forgot from \"./Shared/Component/Forgot\";\r\nimport EmailVerify from \"./Shared/Component/EmailVerify\";\r\nimport ImageRequestBoard from \"./MuseyScreens/Component/UserDashBoard/ImageRequestBoard\";\r\nimport ChangePassword from \"./Shared/Component/ChangePassword\";\r\nimport LogOut from \"./Shared/Component/LogOut\";\r\n\r\n// ProtectedRoute component to handle protected routes\r\nconst ProtectedRoute = ({ element, redirectTo, condition }) => {\r\n  return condition ? element : <Navigate to={redirectTo} />;\r\n};\r\n\r\nfunction App() {\r\n  const authContext = useContext(AuthContext);\r\n  const isLoggedIn = authContext.isLoggedIn;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <BrowserRouter>\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/\" element={<MainPage />} />\r\n          <Route path=\"/forgot\" element={<Forgot />} />\r\n          <Route path=\"/logout\" element={<LogOut />} />\r\n          <Route path=\"/passwordchange\" element={<ChangePassword />} />\r\n          <Route path=\"/emailverified\" element={<EmailVerify />} /> */}\r\n\r\n          {/* other routes */}\r\n          {/* <Route\r\n            path=\"/yourboard\"\r\n            element={\r\n              <ProtectedRoute\r\n                element={<YourBoard />}\r\n                redirectTo=\"/\"\r\n                condition={isLoggedIn}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/uploadboard\"\r\n            element={\r\n              <ProtectedRoute\r\n                element={<UploadBoard />}\r\n                redirectTo=\"/\"\r\n                condition={isLoggedIn}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/addimage\"\r\n            element={\r\n              <ProtectedRoute\r\n                element={<AddImageBoard />}\r\n                redirectTo=\"/\"\r\n                condition={isLoggedIn}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/requestboard\"\r\n            element={\r\n              <ProtectedRoute\r\n                element={<ImageRequestBoard />}\r\n                redirectTo=\"/\"\r\n                condition={isLoggedIn}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/feedbackboard\"\r\n            element={\r\n              <ProtectedRoute\r\n                element={<FeedBackBoard />}\r\n                redirectTo=\"/\"\r\n                condition={isLoggedIn}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      </BrowserRouter> */}\r\n      <ImageRequestBoard/>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,SAASC,WAAW,QAAQ,qCAAqC;AACjE,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,gDAAgD;AACrE,OAAOC,aAAa,MAAM,sDAAsD;AAChF,OAAOC,SAAS,MAAM,kDAAkD;AACxE,OAAOC,WAAW,MAAM,oDAAoD;AAC5E,OAAOC,aAAa,MAAM,sDAAsD;AAChF,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,iBAAiB,MAAM,0DAA0D;AACxF,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,MAAM,MAAM,2BAA2B;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACxD,OAAOG,SAAS,GAAGF,OAAO,gBAAGH,OAAA,CAACd,QAAQ;IAACoB,EAAE,EAAEF;EAAW;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAACC,EAAA,GAFIV,cAAc;AAIpB,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAGhC,UAAU,CAACK,WAAW,CAAC;EAC3C,MAAM4B,UAAU,GAAGD,WAAW,CAACC,UAAU;EAEzC,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eA+DlBjB,OAAA,CAACJ,iBAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACG,EAAA,CAvEQD,GAAG;AAAAM,GAAA,GAAHN,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}