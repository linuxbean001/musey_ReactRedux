{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prashant\\\\ReduxProject(PS)\\\\AI Generation Context API\\\\musey_ReactRedux\\\\src\\\\MuseyScreens\\\\Component\\\\LandingPages\\\\ImageDownload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDownload = () => {\n  _s();\n  const imageRef = useRef(null);\n\n  // Function to download the image\n  const downloadImage = () => {\n    const imageElement = imageRef.current;\n\n    // Create a canvas element to adjust the resolution\n    const canvas = document.createElement('canvas');\n    canvas.width = 1024;\n    canvas.height = 1024;\n    const context = canvas.getContext('2d');\n    context.drawImage(imageElement, 0, 0, 1024, 1024);\n\n    // Convert the canvas to a data URL and create a temporary anchor element to trigger the download\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const anchor = document.createElement('a');\n      anchor.href = url;\n      anchor.download = 'image_1024.png';\n      anchor.click();\n\n      // Clean up the object URL\n      URL.revokeObjectURL(url);\n    }, 'image/png');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEDWR7v91-zC28eMx8JfyicL1S85gab5zjp8MwrvhdQExm71Sytt1kQC7Kits-iNZueYo&usqp=CAU\",\n      alt: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadImage,\n      children: \"Download Image (1024X)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageDownload, \"bYvWjx7ppd/IvjENcdPxi3cZA5M=\");\n_c = ImageDownload;\nexport default ImageDownload;\nvar _c;\n$RefreshReg$(_c, \"ImageDownload\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","ImageDownload","_s","imageRef","downloadImage","imageElement","current","canvas","document","createElement","width","height","context","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","anchor","href","download","click","revokeObjectURL","children","ref","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Prashant/ReduxProject(PS)/AI Generation Context API/musey_ReactRedux/src/MuseyScreens/Component/LandingPages/ImageDownload.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nconst ImageDownload = () => {\r\n  const imageRef = useRef(null);\r\n\r\n  // Function to download the image\r\n  const downloadImage = () => {\r\n    const imageElement = imageRef.current;\r\n\r\n    // Create a canvas element to adjust the resolution\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1024;\r\n    canvas.height = 1024;\r\n    const context = canvas.getContext('2d');\r\n    context.drawImage(imageElement, 0, 0, 1024, 1024);\r\n\r\n    // Convert the canvas to a data URL and create a temporary anchor element to trigger the download\r\n    canvas.toBlob((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      const anchor = document.createElement('a');\r\n      anchor.href = url;\r\n      anchor.download = 'image_1024.png';\r\n      anchor.click();\r\n\r\n      // Clean up the object URL\r\n      URL.revokeObjectURL(url);\r\n    }, 'image/png');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Replace 'your_image_url.jpg' with the actual image URL */}\r\n      <img ref={imageRef} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEDWR7v91-zC28eMx8JfyicL1S85gab5zjp8MwrvhdQExm71Sytt1kQC7Kits-iNZueYo&usqp=CAU\" alt=\"Image\" />\r\n\r\n      <button onClick={downloadImage}>Download Image (1024X)</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageDownload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,YAAY,GAAGF,QAAQ,CAACG,OAAO;;IAErC;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,KAAK,GAAG,IAAI;IACnBH,MAAM,CAACI,MAAM,GAAG,IAAI;IACpB,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,SAAS,CAACT,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;IAEjD;IACAE,MAAM,CAACQ,MAAM,CAAEC,IAAI,IAAK;MACtB,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;MACrC,MAAMI,MAAM,GAAGZ,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAC1CW,MAAM,CAACC,IAAI,GAAGJ,GAAG;MACjBG,MAAM,CAACE,QAAQ,GAAG,gBAAgB;MAClCF,MAAM,CAACG,KAAK,CAAC,CAAC;;MAEd;MACAL,GAAG,CAACM,eAAe,CAACP,GAAG,CAAC;IAC1B,CAAC,EAAE,WAAW,CAAC;EACjB,CAAC;EAED,oBACEjB,OAAA;IAAAyB,QAAA,gBAEEzB,OAAA;MAAK0B,GAAG,EAAEvB,QAAS;MAACwB,GAAG,EAAC,sIAAsI;MAACC,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7KhC,OAAA;MAAQiC,OAAO,EAAE7B,aAAc;MAAAqB,QAAA,EAAC;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnCID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}